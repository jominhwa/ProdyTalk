import React, { Component } from 'react';import RecruitService from '../service/RecruitService';import { Link,withRouter } from "react-router-dom";import './css/Recruit.css';import Home from "./image/Home.png";class ListRecruitComponent extends Component {    constructor(props) {        super(props)        this.state = {            recruits: [], // 페이지에 표시될 글 목록 데이터            typeCondition : 'default',        }        // 작성 버튼 클릭 시 createRecruit 동작        this.createRecruit = this.createRecruit.bind(this);    }    // RecruitService의 메소드 호출해서 데이터 가져옴    componentDidMount() {        if(this.state.typeCondition === 'default') {        console.log('전체글 보기');            RecruitService.getRecruits().then((res) => {                this.setState({                    recruits: res.data,                });            });        }    }    componentDidUpdate(_, prevState) {        if(this.state.typeCondition !== prevState.typeCondition) {            if(this.state.typeCondition === 'study') {                console.log('스터디 글만 보기');                RecruitService.getRecruitsStudy().then((res) => {                    this.setState({                        recruits: res.data,                    });                });            }            else if(this.state.typeCondition === 'project') {                console.log('프로젝트 글만 보기');                RecruitService.getRecruitsProject().then((res) => {                    this.setState({                        recruits: res.data,                    });                });            }            else if(this.state.typeCondition === 'default') {                console.log('default change');                RecruitService.getRecruits().then((res) => {                    this.setState({                        recruits: res.data,                    });                });            }        }    }    // 작성 버튼 클릭 시 글 작성 페이지로 이동    createRecruit() {        this.props.history.push('/createRecruit/_create')    }    // 제목 클릭 시 상세보기 페이지로 이동    readRecruit(recruit_id) {        this.props.history.push(`/readRecruit/${recruit_id}`);    }    getTypeCondition(category_type) {        if(category_type === 'default') {            this.setState({                typeCondition: 'default',            })        }        else if(category_type === 'study') {            this.setState({                typeCondition: 'study',            })        }        else if(category_type === 'project') {            this.setState({                typeCondition: 'project',            })        }    }     render() {            const imagestyle = {                 height:45,                 width:45             };            return (                <div className = "listRecruit">                    <h2 className="text-center" id="listTitle">게시판</h2>                    <div className="categoryDiv">                        <label id="category" ><a onClick = { () => this.getTypeCondition('default')}>전체글 보기 </a></label>                        <label id="cateLine">|</label>                        <label id="category" ><a onClick = { () => this.getTypeCondition('study')}>스터디 </a></label>                        <label id="cateLine">|</label>                        <label id="category" ><a onClick = { () => this.getTypeCondition('project')}>프로젝트 </a></label>                    </div>                    <div className ="row">                        <table className="listTable" style={{width:"80%"}}>                            <thead>                                <tr>                                    <th style={{width:"5%"}}>번호</th>                                    <th style={{width:"10%"}}>Type</th>                                    <th className="title">제목</th>                                    <th style={{width:"15%"}}>작성자</th>                                    <th style={{width:"15%"}}>작성일</th>                                </tr>                            </thead>                            <tbody>                                {                                    this.state.recruits.map(                                        recruit =>                                        <tr key = {recruit.recruit_id}>                                            <td> <a onClick = { () => this.readRecruit(recruit.recruit_id)}>{recruit.recruit_id} </a> </td>                                            <td> <a onClick = { () => this.readRecruit(recruit.recruit_id)}>{recruit.room_type} </a> </td>                                            <td id="readRecruit" className="title"> <a onClick = { () => this.readRecruit(recruit.recruit_id)}> {recruit.title} </a></td>                                            <td> <a onClick = { () => this.readRecruit(recruit.recruit_id)}>{recruit.user_id} </a> </td>                                            <td> <a onClick = { () => this.readRecruit(recruit.recruit_id)}>{recruit.date} </a></td>                                        </tr>                                    )                                }                            </tbody>                        </table>                        <div className = "writeRow">                            <button className="btn btn-primary" id="writeBtn" onClick={this.createRecruit}>게시글 작성</button>                        </div>                    </div>                    <Link to="/main" id="homeBtn"><img src={Home} style={imagestyle}/></Link>                </div>            );        }    }export default ListRecruitComponent;